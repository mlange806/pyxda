#!/usr/bin/env python

import os
from enthought.traits.api import HasTraits
import threading
import glob

# TODO: Enable Live Mode
class LoadImage(HasTraits, threading.Thread):

    def __init__(self, queue, dirpath):
        threading.Thread.__init__(self)
        super(LoadImage, self).__init__() 

        self.dirpath = dirpath
        self.filelist = []

        self.jobqueue = queue
        self.backgroundenable = False
        self.daemon=True

    def run(self):
        print 'Live mode start'
        self.initLive()
        self.livemode()
        print 'Live mode stop'
        return

    def initLive(self):
        while True:
            try:
                if os.path.isdir(self.dirpath):
                    self.filelist = glob.glob(self.dirpath + '/*.tif')
                    print "-----Loaded "+self.dirpath+"-----"
                    break
            except:
                print '*****Critical Error!*****'
                break
                
        return

    def livemode(self):
        #TODO: Hard Coded
        for i in range(len(self.filelist)):
            self.jobqueue.put(['newimage', {'path':self.filelist[i]}])
            #print self.filelist[i]
            if i == 2:
                self.jobqueue.put(['initcache'])
        return

    def checkTime(self, tifpath):
        if tifpath != self.lasttifdirectory:
            self.initLive()
            flag = False
        else:
            flag = False
            if os.path.getatime(tifpath) != self.lastatime:
                flag = True
                self.lastatime = os.path.getatime(tifpath)
                #print 'atime'+str(self.lastatime)
            if os.path.getmtime(tifpath) != self.lastmtime:
                flag = True
                self.lastmtime = os.path.getmtime(tifpath)
                #print 'mtime'+str(self.lastmtime)
            if os.path.getctime(tifpath) != self.lastctime:
                flag = True
                self.lastctime = os.path.getctime(tifpath)
                #print 'atime'+str(self.lastctime)
        return flag